/* Auto-generated by genmsg_cpp for file /home/floribot/ros_workspace/phidgets/srv/servo_reference.srv */
#ifndef PHIDGETS_SERVICE_SERVO_REFERENCE_H
#define PHIDGETS_SERVICE_SERVO_REFERENCE_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace phidgets
{
template <class ContainerAllocator>
struct servo_referenceRequest_ {
  typedef servo_referenceRequest_<ContainerAllocator> Type;

  servo_referenceRequest_()
  : index(0)
  , engage(false)
  , position(0.0)
  , speed(0.0)
  , acceleration(0.0)
  {
  }

  servo_referenceRequest_(const ContainerAllocator& _alloc)
  : index(0)
  , engage(false)
  , position(0.0)
  , speed(0.0)
  , acceleration(0.0)
  {
  }

  typedef int32_t _index_type;
  int32_t index;

  typedef uint8_t _engage_type;
  uint8_t engage;

  typedef float _position_type;
  float position;

  typedef float _speed_type;
  float speed;

  typedef float _acceleration_type;
  float acceleration;


  typedef boost::shared_ptr< ::phidgets::servo_referenceRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::phidgets::servo_referenceRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct servo_referenceRequest
typedef  ::phidgets::servo_referenceRequest_<std::allocator<void> > servo_referenceRequest;

typedef boost::shared_ptr< ::phidgets::servo_referenceRequest> servo_referenceRequestPtr;
typedef boost::shared_ptr< ::phidgets::servo_referenceRequest const> servo_referenceRequestConstPtr;


template <class ContainerAllocator>
struct servo_referenceResponse_ {
  typedef servo_referenceResponse_<ContainerAllocator> Type;

  servo_referenceResponse_()
  : ack(0)
  {
  }

  servo_referenceResponse_(const ContainerAllocator& _alloc)
  : ack(0)
  {
  }

  typedef int32_t _ack_type;
  int32_t ack;


  typedef boost::shared_ptr< ::phidgets::servo_referenceResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::phidgets::servo_referenceResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct servo_referenceResponse
typedef  ::phidgets::servo_referenceResponse_<std::allocator<void> > servo_referenceResponse;

typedef boost::shared_ptr< ::phidgets::servo_referenceResponse> servo_referenceResponsePtr;
typedef boost::shared_ptr< ::phidgets::servo_referenceResponse const> servo_referenceResponseConstPtr;

struct servo_reference
{

typedef servo_referenceRequest Request;
typedef servo_referenceResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct servo_reference
} // namespace phidgets

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::phidgets::servo_referenceRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::phidgets::servo_referenceRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::phidgets::servo_referenceRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "10aec6261d178a540f640abc7e85af3d";
  }

  static const char* value(const  ::phidgets::servo_referenceRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x10aec6261d178a54ULL;
  static const uint64_t static_value2 = 0x0f640abc7e85af3dULL;
};

template<class ContainerAllocator>
struct DataType< ::phidgets::servo_referenceRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "phidgets/servo_referenceRequest";
  }

  static const char* value(const  ::phidgets::servo_referenceRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::phidgets::servo_referenceRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int32 index\n\
bool engage\n\
float32 position\n\
float32 speed\n\
float32 acceleration\n\
\n\
";
  }

  static const char* value(const  ::phidgets::servo_referenceRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::phidgets::servo_referenceRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::phidgets::servo_referenceResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::phidgets::servo_referenceResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::phidgets::servo_referenceResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "35e806e08fe8e25fde5b4c88fa52f05b";
  }

  static const char* value(const  ::phidgets::servo_referenceResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x35e806e08fe8e25fULL;
  static const uint64_t static_value2 = 0xde5b4c88fa52f05bULL;
};

template<class ContainerAllocator>
struct DataType< ::phidgets::servo_referenceResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "phidgets/servo_referenceResponse";
  }

  static const char* value(const  ::phidgets::servo_referenceResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::phidgets::servo_referenceResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int32 ack\n\
\n\
\n\
";
  }

  static const char* value(const  ::phidgets::servo_referenceResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::phidgets::servo_referenceResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::phidgets::servo_referenceRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.index);
    stream.next(m.engage);
    stream.next(m.position);
    stream.next(m.speed);
    stream.next(m.acceleration);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct servo_referenceRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::phidgets::servo_referenceResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.ack);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct servo_referenceResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<phidgets::servo_reference> {
  static const char* value() 
  {
    return "e147971107721d067998f603de281d62";
  }

  static const char* value(const phidgets::servo_reference&) { return value(); } 
};

template<>
struct DataType<phidgets::servo_reference> {
  static const char* value() 
  {
    return "phidgets/servo_reference";
  }

  static const char* value(const phidgets::servo_reference&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<phidgets::servo_referenceRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "e147971107721d067998f603de281d62";
  }

  static const char* value(const phidgets::servo_referenceRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<phidgets::servo_referenceRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "phidgets/servo_reference";
  }

  static const char* value(const phidgets::servo_referenceRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<phidgets::servo_referenceResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "e147971107721d067998f603de281d62";
  }

  static const char* value(const phidgets::servo_referenceResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<phidgets::servo_referenceResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "phidgets/servo_reference";
  }

  static const char* value(const phidgets::servo_referenceResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // PHIDGETS_SERVICE_SERVO_REFERENCE_H

